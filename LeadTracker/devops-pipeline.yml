trigger:
  - master

parameters:
  - name: env
    displayName: Environment
    type: string
    default: dev
    values:
      - dev
      - qa
      - prod

  - name: action
    displayName: Terraform Action
    type: string
    default: apply
    values:
      - apply
      - destroy

pool:
  vmImage: ubuntu-latest

steps:
  - task: TerraformInstaller@1
    displayName: "Install Terraform"
    inputs:
      terraformVersion: '1.6.0'

  - script: |
      echo "Injecting ARM_* environment variables"
      export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
      export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
      export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
      export ARM_TENANT_ID=$(ARM_TENANT_ID)
      terraform init -backend-config="key=${{ parameters.env }}.tfstate"
    displayName: "Terraform Init"

  - script: |
      export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
      export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
      export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
      export ARM_TENANT_ID=$(ARM_TENANT_ID)

      if [ '${{ parameters.action }}' == 'destroy' ]; then
        terraform destroy -var="env=${{ parameters.env }}" -auto-approve
      else
        terraform plan -var="env=${{ parameters.env }}" -out=tfplan
        terraform apply -auto-approve tfplan
      fi
    displayName: "Terraform Apply or Destroy"


